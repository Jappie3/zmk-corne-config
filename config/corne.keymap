/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h> // EXT_POWER_TOGGLE_CMD, EXT_POWER_ON_CMD & EXT_POWER_OFF_CMD

&nice_view_spi {
  cs-gpios = <&pro_micro 2 GPIO_ACTIVE_HIGH>;
};

/ {
    keymap {
		compatible = "zmk,keymap";

		// dvorak
		default_layer {
			display-name="DVO";
			bindings = <
				&kp TAB   &kp SQT  &kp COMMA &kp DOT   &kp P &kp Y		&kp F  &kp G   &kp C &kp R &kp L &kp BSPC
				&kp LSHFT &kp A    &kp O     &kp E     &kp U &kp I		&kp D  &kp H   &kp T &kp N &kp S &kp RSHFT
				&kp LCTRL &kp SEMI &kp Q     &kp J     &kp K &kp X		&kp B  &kp M   &kp W &kp V &kp Z &kp RCTRL
								&kp LGUI  &kp SPACE &kp LALT			&mo 2  &kp RET &mo 1
			>;
		};

		symbols_layer {
			display-name="SYM";
			bindings = <
				&kp GRAVE  &kp N1   &kp N2    &kp N3    &kp N4		  &kp N5			&kp N6   &kp N7   &kp N8   &kp N9    &kp N0	  &kp BSPC
				&kp LSHFT  &kp PLUS &kp MINUS &kp EQUAL &kp SLASH	  &kp QUESTION		&kp LBKT &kp LEFT &kp UP   &kp RIGHT &kp RBKT &kp RSHFT
				&kp LCTRL  &trans   &kp UNDER &kp PIPE  &kp BACKSLASH &trans			&kp DEL	 &kp LBRC &kp DOWN &kp RBRC	 &trans	  &kp LCTRL
											&kp LGUI  &kp SPACE	  &kp LALT			&trans   &kp RET  &trans
			>;
		};

		function_layer {
			display-name="FUN";
			bindings = <
				&kp  TAB  &kp F1 &kp F2 &kp F3 &kp F4 &kp F5		&kp F6	&kp F7	&kp F8 &kp F9 &kp F10 &kp BSPC
				&kp LSHFT &trans &trans &trans &trans &trans		&kp F11 &kp F12	&trans &trans &trans  &kp RSHFT
				&kp LCTRL &trans &trans &trans &trans &trans		&kp ESC &trans  &trans &trans &trans  &kp RCTRL
								&kp LGUI &kp SPACE &kp LALT		&trans &kp RET &trans
			>;
		};

		qwerty_layer {
			display-name="QWE";
			bindings = <
				&kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
				&kp LSHFT &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp RSHFT
				&kp LCTRL &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp LCTRL
							&kp LGUI &kp SPACE &kp LALT   &trans &kp RET &trans
			>;
		};
	};

    conditional_layers {
        compatible = "zmk,conditional-layers";
		// activate layer 3 if both 1 & 2 are active
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
